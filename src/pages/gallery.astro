---
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { i18n } from "@i18n/translation";
import I18nKey from "@i18n/i18nKey";
import MasonryGallery from "@components/MasonryGallery.svelte";
import { getImage } from "astro:assets";
import type { OptimizedImage } from "@/types/masonry-gallery";
import type { ImageMetadata } from "astro";

const imagesPromises = Object.values(
  import.meta.glob<ImageMetadata>("/src/assets/gallery/*.{jpeg,jpg,png,gif}", { import: "default" })
)
  .map(async (value) => {
    const imageProps = await value();
    return getImage({ src: imageProps, widths: [384, 600, 1200, 1920, 2560] });
  })
  .sort(() => Math.random() - 0.5);

const images = await Promise.all(imagesPromises);

const mappedImages = images.map((image) => {
  return {
    src: image.src,
    srcSet: image.srcSet.attribute,
    sizes: "(max-width: 640px) 600px, 384px",
    width: image.attributes.width,
    height: image.attributes.height,
    alt: "Uh oh, something went wrong, could not retrieve the description",
  } satisfies OptimizedImage;
});

const breakpoints = {
  640: 2,
  768: 3,
  1024: 4,
  1280: 5,
  1536: 6,
  1920: 7,
  2560: 8,
};
---

<MainGridLayout description={i18n(I18nKey.gallery)} title={i18n(I18nKey.gallery)}>
  <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
    <div class="card-base z-10 px-9 py-6 relative w-full">
      <MasonryGallery breakpoints={breakpoints} client:load imageList={mappedImages} />
    </div>
  </div>
</MainGridLayout>
