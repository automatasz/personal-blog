---
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { auth } from "@utils/auth";
import { db } from "@utils/db";
import { UPLOADTHING_APP_ID } from "astro:env/server";

export const prerender = false;

const { id } = Astro.params;

const session = await auth.api.getSession({ headers: Astro.request.headers });

async function getBatch() {
  if (id && session?.user.id) {
    return db
      .withSchema("keyworder")
      .selectFrom("description")
      .selectAll()
      .where("batch_id", "=", id)
      .where("user_id", "=", session?.user.id)
      .execute();
  }
  return undefined;
}

const batch = await getBatch();
---

<MainGridLayout description={i18n(I18nKey.batch)} title={i18n(I18nKey.batch)}>
  <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
    <div class="card-base z-10 px-9 py-6 relative w-full text-75">
      <section class="table text-75">
        {
          batch?.map((image) => (
            <div class="grid lg:grid-cols-3">
              <div class="p-1">
                <img alt={image.title} src={`https://${UPLOADTHING_APP_ID}.ufs.sh/f/${image.file_id}`} />
              </div>
              <div class="lg:col-span-2 p-1">
                <h3 class="font-black text-xl">{image.title}</h3>
                <p class="text-sm text-50">file.png</p>
                <p class="my-2">{image.description}</p>
                <div class="flex gap-2 flex-wrap">
                  {image.keywords?.map((keyword) => (
                    <span class="btn-regular h-8 text-sm px-3 rounded-lg">{keyword}</span>
                  ))}
                </div>
              </div>
            </div>
          ))
        }
      </section>
    </div>
  </div>
</MainGridLayout>
